/* Generated by re2c 1.1.1 */
#line 1 "tokenizer.re"
#include "tokenizer.h"
#include "parser.tab.hh"

namespace SymEngine
{

void Tokenizer::set_string(const std::string &str)
{
    // The input string must be NULL terminated, otherwise the tokenizer will
    // not detect the end of string. After C++11, the std::string is guaranteed
    // to end with \0, but we check this here just in case.
    SYMENGINE_ASSERT(str[str.size()] == '\0');
    cur = (unsigned char *)(&str[0]);
}

int Tokenizer::lex(YYSTYPE &yylval)
{
    for (;;) {
        tok = cur;
        
#line 24 "tokenizer.cpp"
{
	unsigned char yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,  32,  32,  32,   0,  32,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 32,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192,   0,   0,   0,   0,   0,   0, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128,   0,   0,   0,   0, 128, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	yych = *cur;
	if (yybm[0+yych] & 32) {
		goto yy6;
	}
	if (yych <= '9') {
		if (yych <= '*') {
			if (yych <= 0x00) goto yy2;
			if (yych <= '\'') goto yy4;
			if (yych <= ')') goto yy9;
			goto yy11;
		} else {
			if (yych == '.') goto yy12;
			if (yych <= '/') goto yy9;
			goto yy13;
		}
	} else {
		if (yych <= '^') {
			if (yych <= '?') goto yy4;
			if (yych <= '@') goto yy16;
			if (yych <= 'Z') goto yy18;
			goto yy4;
		} else {
			if (yych <= '`') {
				if (yych <= '_') goto yy18;
				goto yy4;
			} else {
				if (yych <= 'z') goto yy18;
				if (yych <= 0x7F) goto yy4;
				goto yy18;
			}
		}
	}
yy2:
	++cur;
#line 37 "tokenizer.re"
	{ return yytokentype::END_OF_FILE; }
#line 97 "tokenizer.cpp"
yy4:
	++cur;
yy5:
#line 36 "tokenizer.re"
	{ throw SymEngine::ParseError("Unknown token: '"+token()+"'"); }
#line 103 "tokenizer.cpp"
yy6:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy6;
	}
#line 38 "tokenizer.re"
	{ continue; }
#line 111 "tokenizer.cpp"
yy9:
	++cur;
yy10:
#line 41 "tokenizer.re"
	{ return tok[0]; }
#line 117 "tokenizer.cpp"
yy11:
	yych = *++cur;
	if (yych == '*') goto yy16;
	goto yy10;
yy12:
	yych = *++cur;
	if (yych <= '/') goto yy5;
	if (yych <= '9') goto yy21;
	goto yy5;
yy13:
	yych = *(mar = ++cur);
	if (yybm[0+yych] & 64) {
		goto yy13;
	}
	if (yych <= 'D') {
		if (yych == '.') goto yy23;
	} else {
		if (yych <= 'E') goto yy24;
		if (yych == 'e') goto yy24;
	}
yy15:
#line 44 "tokenizer.re"
	{ yylval.string=token(); return yytokentype::NUMERIC; }
#line 141 "tokenizer.cpp"
yy16:
	++cur;
#line 42 "tokenizer.re"
	{ return yytokentype::POW; }
#line 146 "tokenizer.cpp"
yy18:
	yych = *++cur;
	if (yybm[0+yych] & 128) {
		goto yy18;
	}
#line 43 "tokenizer.re"
	{ yylval.string=token(); return yytokentype::IDENTIFIER; }
#line 154 "tokenizer.cpp"
yy21:
	yych = *(mar = ++cur);
	if (yych <= 'D') {
		if (yych <= '/') goto yy15;
		if (yych <= '9') goto yy21;
		goto yy15;
	} else {
		if (yych <= 'E') goto yy24;
		if (yych == 'e') goto yy24;
		goto yy15;
	}
yy23:
	yych = *++cur;
	if (yych <= '/') goto yy15;
	if (yych <= '9') goto yy21;
	goto yy15;
yy24:
	yych = *++cur;
	if (yych <= ',') {
		if (yych == '+') goto yy26;
	} else {
		if (yych <= '-') goto yy26;
		if (yych <= '/') goto yy25;
		if (yych <= '9') goto yy27;
	}
yy25:
	cur = mar;
	goto yy15;
yy26:
	yych = *++cur;
	if (yych <= '/') goto yy25;
	if (yych >= ':') goto yy25;
yy27:
	yych = *++cur;
	if (yych <= '/') goto yy15;
	if (yych <= '9') goto yy27;
	goto yy15;
}
#line 45 "tokenizer.re"

    }
}

} // namespace SymEngine
