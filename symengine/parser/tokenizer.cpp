/* Generated by re2c 1.1.1 */
#line 1 "tokenizer.re"
#include "tokenizer.h"
#include "parser.tab.hh"

namespace SymEngine
{

void Tokenizer::set_string(std::string &str)
{
    // The input string must be NULL terminated, otherwise the tokenizer will
    // not detect the end of string. After C++11, the std::string is guaranteed
    // to end with \0, but we check this here just in case.
    SYMENGINE_ASSERT(str[str.size()] == '\0');
    cur = (unsigned char *)(&str[0]);
}

yy::parser::symbol_type Tokenizer::lex()
{
    for (;;) {
        tok = cur;

#line 22 "tokenizer.cpp"
        {
            unsigned char yych;
            static const unsigned char yybm[] = {
                0,   0,   0,   0,   0,   0,   0,   0,   0,   32,  32,  32,  0,
                32,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                0,   0,   0,   0,   0,   0,   32,  0,   0,   0,   0,   0,   0,
                0,   0,   0,   0,   0,   0,   0,   0,   0,   192, 192, 192, 192,
                192, 192, 192, 192, 192, 192, 0,   0,   0,   0,   0,   0,   0,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                0,   0,   0,   0,   128, 0,   128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 0,   0,   0,   0,   0,   128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
                128, 128, 128, 128, 128, 128, 128, 128, 128,
            };
            yych = *cur;
            if (yybm[0 + yych] & 32) {
                goto yy6;
            }
            if (yych <= '=') {
                if (yych <= '.') {
                    if (yych <= ')') {
                        if (yych >= 0x01)
                            goto yy4;
                    } else {
                        if (yych <= '*')
                            goto yy9;
                        if (yych <= '-')
                            goto yy4;
                        goto yy10;
                    }
                } else {
                    if (yych <= '9') {
                        if (yych <= '/')
                            goto yy4;
                        goto yy11;
                    } else {
                        if (yych <= ';')
                            goto yy4;
                        if (yych <= '<')
                            goto yy14;
                        goto yy15;
                    }
                }
            } else {
                if (yych <= '^') {
                    if (yych <= '?') {
                        if (yych <= '>')
                            goto yy16;
                        goto yy4;
                    } else {
                        if (yych <= '@')
                            goto yy17;
                        if (yych <= 'Z')
                            goto yy19;
                        goto yy4;
                    }
                } else {
                    if (yych <= '`') {
                        if (yych <= '_')
                            goto yy19;
                        goto yy4;
                    } else {
                        if (yych <= 'z')
                            goto yy19;
                        if (yych <= 0x7F)
                            goto yy4;
                        goto yy19;
                    }
                }
            }
            ++cur;
#line 39 "tokenizer.re"
            {
                return yy::parser::make_END_OF_FILE();
            }
#line 106 "tokenizer.cpp"
        yy4:
            ++cur;
        yy5 :
#line 38 "tokenizer.re"
        {
            throw SymEngine::ParseError("Unknown token: '" + token() + "'");
        }
#line 112 "tokenizer.cpp"
        yy6:
            yych = *++cur;
            if (yybm[0 + yych] & 32) {
                goto yy6;
            }
#line 40 "tokenizer.re"
            {
                continue;
            }
#line 120 "tokenizer.cpp"
        yy9:
            yych = *++cur;
            if (yych == '*')
                goto yy17;
            goto yy5;
        yy10:
            yych = *++cur;
            if (yych <= '/')
                goto yy5;
            if (yych <= '9')
                goto yy22;
            goto yy5;
        yy11:
            yych = *++cur;
            if (yybm[0 + yych] & 64) {
                goto yy11;
            }
            if (yych <= '^') {
                if (yych <= '@') {
                    if (yych == '.')
                        goto yy24;
                } else {
                    if (yych == 'E')
                        goto yy28;
                    if (yych <= 'Z')
                        goto yy25;
                }
            } else {
                if (yych <= 'd') {
                    if (yych != '`')
                        goto yy25;
                } else {
                    if (yych <= 'e')
                        goto yy28;
                    if (yych <= 'z')
                        goto yy25;
                    if (yych >= 0x80)
                        goto yy25;
                }
            }
        yy13 :
#line 49 "tokenizer.re"
        {
            return yy::parser::make_NUMERIC(token());
        }
#line 154 "tokenizer.cpp"
        yy14:
            yych = *++cur;
            if (yych == '=')
                goto yy29;
            goto yy5;
        yy15:
            yych = *++cur;
            if (yych == '=')
                goto yy31;
            goto yy5;
        yy16:
            yych = *++cur;
            if (yych == '=')
                goto yy33;
            goto yy5;
        yy17:
            ++cur;
#line 44 "tokenizer.re"
            {
                return yy::parser::make_POW();
            }
#line 171 "tokenizer.cpp"
        yy19:
            yych = *++cur;
            if (yybm[0 + yych] & 128) {
                goto yy19;
            }
#line 48 "tokenizer.re"
            {
                return yy::parser::make_IDENTIFIER(token());
            }
#line 179 "tokenizer.cpp"
        yy22:
            yych = *++cur;
        yy23:
            if (yych <= '^') {
                if (yych <= '@') {
                    if (yych <= '/')
                        goto yy13;
                    if (yych <= '9')
                        goto yy22;
                    goto yy13;
                } else {
                    if (yych == 'E')
                        goto yy28;
                    if (yych <= 'Z')
                        goto yy25;
                    goto yy13;
                }
            } else {
                if (yych <= 'd') {
                    if (yych == '`')
                        goto yy13;
                    goto yy25;
                } else {
                    if (yych <= 'e')
                        goto yy28;
                    if (yych <= 'z')
                        goto yy25;
                    if (yych <= 0x7F)
                        goto yy13;
                    goto yy25;
                }
            }
        yy24:
            yych = *++cur;
            if (yych == 'E')
                goto yy25;
            if (yych != 'e')
                goto yy23;
        yy25:
            yych = *++cur;
        yy26:
            if (yych <= '^') {
                if (yych <= '9') {
                    if (yych >= '0')
                        goto yy25;
                } else {
                    if (yych <= '@')
                        goto yy27;
                    if (yych <= 'Z')
                        goto yy25;
                }
            } else {
                if (yych <= '`') {
                    if (yych <= '_')
                        goto yy25;
                } else {
                    if (yych <= 'z')
                        goto yy25;
                    if (yych >= 0x80)
                        goto yy25;
                }
            }
        yy27 :
#line 50 "tokenizer.re"
        {
            return yy::parser::make_IMPLICIT_MUL(token());
        }
#line 229 "tokenizer.cpp"
        yy28:
            yych = *(mar = ++cur);
            if (yych <= ',') {
                if (yych == '+')
                    goto yy35;
                goto yy26;
            } else {
                if (yych <= '-')
                    goto yy35;
                if (yych <= '/')
                    goto yy26;
                if (yych <= '9')
                    goto yy37;
                goto yy26;
            }
        yy29:
            ++cur;
#line 45 "tokenizer.re"
            {
                return yy::parser::make_LE();
            }
#line 245 "tokenizer.cpp"
        yy31:
            ++cur;
#line 47 "tokenizer.re"
            {
                return yy::parser::make_EQ();
            }
#line 250 "tokenizer.cpp"
        yy33:
            ++cur;
#line 46 "tokenizer.re"
            {
                return yy::parser::make_GE();
            }
#line 255 "tokenizer.cpp"
        yy35:
            yych = *++cur;
            if (yych <= '/')
                goto yy36;
            if (yych <= '9')
                goto yy37;
        yy36:
            cur = mar;
            goto yy27;
        yy37:
            yych = *++cur;
            if (yych <= '^') {
                if (yych <= '9') {
                    if (yych <= '/')
                        goto yy13;
                    goto yy37;
                } else {
                    if (yych <= '@')
                        goto yy13;
                    if (yych <= 'Z')
                        goto yy25;
                    goto yy13;
                }
            } else {
                if (yych <= '`') {
                    if (yych <= '_')
                        goto yy25;
                    goto yy13;
                } else {
                    if (yych <= 'z')
                        goto yy25;
                    if (yych <= 0x7F)
                        goto yy13;
                    goto yy25;
                }
            }
        }
#line 51 "tokenizer.re"
    }
}

std::string Tokenizer::token()
{
    return std::string((char *)tok, cur - tok);
}

} // namespace SymEngine
